{"version":"2.1.0","type":"application/json","title":"$:/plugins/Gk0Wk/echarts-graph-modularity","plugin-type":"plugin","name":"ECharts Graph Modularity","list":"readme","description":"Graph modularity extension for Apache ECharts","source":"https://github.com/tiddly-gittly/tw-echarts/tree/master/plugins/Gk0Wk/echarts-graph-modularity","parent-plugin":"$:/plugins/Gk0Wk/echarts","dependents":"$:/plugins/Gk0Wk/echarts","text":"{\"tiddlers\":{\"$:/plugins/Gk0Wk/echarts-graph-modularity/echarts-graph-modularity.min.js\":{\"title\":\"$:/plugins/Gk0Wk/echarts-graph-modularity/echarts-graph-modularity.min.js\",\"text\":\"!function(t,e){\\\"object\\\"==typeof exports&&\\\"object\\\"==typeof module?module.exports=e(require(\\\"$:/plugins/Gk0Wk/echarts/echarts.min.js\\\")):\\\"function\\\"==typeof define&&define.amd?define([\\\"$:/plugins/Gk0Wk/echarts/echarts.min.js\\\"],e):\\\"object\\\"==typeof exports?exports[\\\"echarts-graph-modularity\\\"]=e(require(\\\"$:/plugins/Gk0Wk/echarts/echarts.min.js\\\")):t[\\\"echarts-graph-modularity\\\"]=e(t.echarts)}(self,function(e){return n={10:(t,e,n)=>{t.exports=n(225)},216:(t,e,n)=>{t.exports.degree=n(176),t.exports.betweenness=n(476)},476:t=>{t.exports=function(c,h){var a,d=[],f=[],g=Object.create(null),l=Object.create(null),p=Object.create(null),m=Object.create(null),C=Object.create(null);return c.forEachNode(function(t){C[t.id]=0}),c.forEachNode(function(t){t=a=t.id;for(c.forEachNode(function(t){var e=t.id;g[e]=[],l[e]=-1,p[e]=0}),l[t]=0,p[t]=1,d.push(t);d.length;){var n=d.shift();f.push(n),c.forEachLinkedNode(n,e,h)}function e(t){var e=t.id;-1===l[e]&&(l[e]=l[n]+1,d.push(e)),l[e]===l[n]+1&&(p[e]+=p[n],g[e].push(n))}for(c.forEachNode(v);f.length;){for(var o=f.pop(),i=(1+m[o])/p[o],s=g[o],r=0;r<s.length;++r){var u=s[r];m[u]+=p[u]*i}o!==a&&(C[o]+=m[o])}}),h||Object.keys(C).forEach(function(t){C[t]/=2}),C;function v(t){m[t.id]=0}}},176:t=>{function e(t,e){var n=0;if(t)for(var o=0;o<t.length;o+=1)n+=t[o].toId===e?1:0;return n}function s(t,e){var n=0;if(t)for(var o=0;o<t.length;o+=1)n+=t[o].fromId===e?1:0;return n}function r(t){return t?t.length:0}t.exports=function(n,t){var o,i=Object.create(null);if(\\\"both\\\"===(t=(t||\\\"both\\\").toLowerCase())||\\\"inout\\\"===t)o=r;else if(\\\"in\\\"===t)o=e;else{if(\\\"out\\\"!==t)throw new Error(\\\"Expected centrality degree kind is: in, out or both\\\");o=s}return n.forEachNode(function(t){var e=n.getLinks(t.id);i[t.id]=o(e,t.id)}),i}},245:t=>{t.exports=function(t){var e=t;if(!e)throw new Error(\\\"Eventify cannot use falsy object as events subject\\\");for(var n=[\\\"on\\\",\\\"fire\\\",\\\"off\\\"],o=0;o<n.length;++o)if(e.hasOwnProperty(n[o]))throw new Error(\\\"Subject cannot be eventified, since it already has property '\\\"+n[o]+\\\"'\\\");s=t,r=Object.create(null);var s,r,i={on:function(t,e,n){if(\\\"function\\\"!=typeof e)throw new Error(\\\"callback is expected to be a function\\\");return(r[t]||(r[t]=[])).push({callback:e,ctx:n}),s},off:function(t,e){if(void 0===t)r=Object.create(null);else if(r[t])if(\\\"function\\\"!=typeof e)delete r[t];else for(var n=r[t],o=0;o<n.length;++o)n[o].callback===e&&n.splice(o,1);return s},fire:function(t){var e,n=r[t];if(n){1<arguments.length&&(e=Array.prototype.splice.call(arguments,1));for(var o=0;o<n.length;++o){var i=n[o];i.callback.apply(i.ctx,e)}}return s}};return t.on=i.on,t.off=i.off,t.fire=i.fire,t}},736:(t,e,n)=>{t.exports=function(t){void 0===(t=t||{}).uniqueLinkId&&(t.uniqueLinkId=!0);var e,r=\\\"function\\\"==typeof Object.create?Object.create(null):{},u=[],s={},o=0,n=0,i=Object.keys?function(t){if(\\\"function\\\"==typeof t)for(var e=Object.keys(r),n=0;n<e.length;++n)if(t(r[e[n]]))return!0}:function(t){if(\\\"function\\\"==typeof t)for(var e in r)if(t(r[e]))return!0},c=t.uniqueLinkId?function(t,e,n){var o=S(t,e),i=s.hasOwnProperty(o);return(i||k(t,e))&&(i||(s[o]=0),o=S(t+(i=\\\"@\\\"+ ++s[o]),e+i)),new j(t,e,n,o)}:function(t,e,n){return new j(t,e,n,S(t,e))},h=[],a=W,d=W,f=W,g=W,l={addNode:C,addLink:function(t,e,n){f();var o=v(t)||C(t),i=v(e)||C(e),s=c(t,e,n);return u.push(s),O(o,s),t!==e&&O(i,s),a(s,\\\"add\\\"),g(),s},removeLink:w,removeNode:y,getNode:v,getNodesCount:function(){return o},getLinksCount:function(){return u.length},getLinks:function(t){var e=v(t);return e?e.links:null},forEachNode:i,forEachLinkedNode:function(t,e,n){var o=v(t);if(o&&o.links&&\\\"function\\\"==typeof e)return(n?function(t,e,n){for(var o=0;o<t.length;++o){var i=t[o];if(i.fromId===e&&n(r[i.toId],i))return!0}}:function(t,e,n){for(var o=0;o<t.length;++o){var i=t[o],s=i.fromId===e?i.toId:i.fromId;if(n(r[s],i))return!0}})(o.links,t,e)},forEachLink:function(t){var e,n;if(\\\"function\\\"==typeof t)for(e=0,n=u.length;e<n;++e)t(u[e])},beginUpdate:f,endUpdate:g,clear:function(){f(),i(function(t){y(t.id)}),g()},hasLink:k,getLink:k};return E(l),e=l.on,l.on=function(){return l.beginUpdate=f=b,l.endUpdate=g=N,a=p,d=m,(l.on=e).apply(l,arguments)},l;function p(t,e){h.push({link:t,changeType:e})}function m(t,e){h.push({node:t,changeType:e})}function C(t,e){if(void 0===t)throw new Error(\\\"Invalid node identifier\\\");f();var n=v(t);return n?d(n,\\\"update\\\"):(n=new I(t),o++,d(n,\\\"add\\\")),n.data=e,r[t]=n,g(),n}function v(t){return r[t]}function y(t){var e=v(t);if(!e)return!1;if(f(),e.links)for(;e.links.length;)w(e.links[0]);return delete r[t],o--,d(e,\\\"remove\\\"),g(),!0}function w(t){if(!t)return!1;var e=x(t,u);if(e<0)return!1;f(),u.splice(e,1);var n=v(t.fromId),o=v(t.toId);return n&&0<=(e=x(t,n.links))&&n.links.splice(e,1),o&&0<=(e=x(t,o.links))&&o.links.splice(e,1),a(t,\\\"remove\\\"),g(),!0}function k(t,e){var n,o=v(t);if(o&&o.links)for(n=0;n<o.links.length;++n){var i=o.links[n];if(i.fromId===t&&i.toId===e)return i}return null}function W(){}function b(){n+=1}function N(){0==--n&&0<h.length&&(l.fire(\\\"changed\\\",h),h.length=0)}};var E=n(245);function x(t,e){if(e){if(e.indexOf)return e.indexOf(t);for(var n=e.length,o=0;o<n;o+=1)if(e[o]===t)return o}return-1}function I(t){this.id=t,this.links=null,this.data=null}function O(t,e){t.links?t.links.push(e):t.links=[e]}function j(t,e,n,o){this.fromId=t,this.toId=e,this.data=n,this.id=o}function S(t,e){var n,o,i=t.toString()+\\\"👉 \\\"+e.toString(),s=0;if(0!=i.length)for(n=0,o=i.length;n<o;n++)s=(s<<5)-s+i.charCodeAt(n),s|=0;return s}},410:t=>{function e(t){this.structure=t.structure||t,this.connectionsWeight=new Map,this.connectionsCount=new Map,this.nodes=new Set,this.weightSum=0}e.prototype.size=function(){return this.nodes.size},e.prototype.seed=function(t){this.nodes.add(t),this.weightSum+=this.structure.weights[t]},e.prototype.add=function(t){return this.nodes.add(t),this.weightSum+=this.structure.weights[t],!0},e.prototype.remove=function(t){var e,n=this.nodes[\\\"delete\\\"](t);return this.weightSum-=this.structure.weights[t],this.nodes.size||(e=this.structure.communities.indexOf(this),delete this.structure.communities[e]),n},t.exports=e},997:(t,e,n)=>{\\\"use strict\\\";var h=n(410),a=n(623);function o(t,i){this.N=t.getNodesCount(),this.graphWeightSum=0,(this.structure=this).invMap=new Map,this.nodeConnectionsWeight=new Array(this.N),this.nodeConnectionsCount=new Array(this.N),this.nodeCommunities=new Array(this.N),this.map=new Map,this.topology=new Array(this.N);for(var e=0;e<this.N;e++)this.topology[e]=[];this.communities=[],this.weights=new Array(this.N);var n=0;t.forEachNode((function(t){this.map.set(t.id,n),this.nodeCommunities[n]=new h(this),this.nodeConnectionsWeight[n]=new Map,this.nodeConnectionsCount[n]=new Map,this.weights[n]=0,this.nodeCommunities[n].seed(n);var e=new h(this);e.nodes.add(n),this.invMap.set(n,e),this.communities.push(this.nodeCommunities[n]),n++}).bind(this)),t.forEachLink((function(t){var e=this.map.get(t.fromId),n=this.map.get(t.toId),o=1;e!==n&&(i&&(o=t.data.weight),this.setUpLink(e,n,o),this.setUpLink(n,e,o))}).bind(this)),this.graphWeightSum/=2}o.prototype.setUpLink=function(t,e,n){this.weights[t]+=n;var o=new a(t,e,n),o=(this.topology[t].push(o),this.nodeCommunities[e]);this.nodeConnectionsWeight[t].set(o,n),this.nodeConnectionsCount[t].set(o,1),this.nodeCommunities[t].connectionsWeight.set(o,n),this.nodeCommunities[t].connectionsCount.set(o,1),this.nodeConnectionsWeight[e].set(this.nodeCommunities[t],n),this.nodeConnectionsCount[e].set(this.nodeCommunities[t],1),this.nodeCommunities[e].connectionsWeight.set(this.nodeCommunities[t],n),this.nodeCommunities[e].connectionsCount.set(this.nodeCommunities[t],1),this.graphWeightSum+=n},o.prototype.addNodeTo=function(t,e){e.add(t),this.nodeCommunities[t]=e;var n,o=this.topology[t];for(n in o){var i=o[n],s=i.target,r=this.nodeConnectionsWeight[s].get(e),r=(void 0===r?this.nodeConnectionsWeight[s].set(e,i.weight):this.nodeConnectionsWeight[s].set(e,r+i.weight),this.nodeConnectionsCount[s].get(e)),r=(void 0===r?this.nodeConnectionsCount[s].set(e,1):this.nodeConnectionsCount[s].set(e,r+1),this.nodeCommunities[s]),s=r.connectionsWeight.get(e),s=(void 0===s?r.connectionsWeight.set(e,i.weight):r.connectionsWeight.set(e,s+i.weight),r.connectionsCount.get(e)),s=(void 0===s?r.connectionsCount.set(e,1):r.connectionsCount.set(e,s+1),this.nodeConnectionsWeight[t].get(r)),s=(void 0===s?this.nodeConnectionsWeight[t].set(r,i.weight):this.nodeConnectionsWeight[t].set(r,s+i.weight),this.nodeConnectionsCount[t].get(r));void 0===s?this.nodeConnectionsCount[t].set(r,1):this.nodeConnectionsCount[t].set(r,s+1),e!=r&&(void 0===(s=e.connectionsWeight.get(r))?e.connectionsWeight.set(r,i.weight):e.connectionsWeight.set(r,s+i.weight),void 0===(s=e.connectionsCount.get(r))?e.connectionsCount.set(r,1):e.connectionsCount.set(r,s+1))}},o.prototype.removeNodeFrom=function(t,e){var n,o=this.nodeCommunities[t],i=this.topology[t];for(n in i){var s=i[n],r=s.target,u=this.nodeConnectionsWeight[r].get(o),c=this.nodeConnectionsCount[r].get(o),u=(c-1==0?(this.nodeConnectionsWeight[r][\\\"delete\\\"](o),this.nodeConnectionsCount[r][\\\"delete\\\"](o)):(this.nodeConnectionsWeight[r].set(o,u-s.weight),this.nodeConnectionsCount[r].set(o,c-1)),this.nodeCommunities[r]),c=u.connectionsWeight.get(o),h=u.connectionsCount.get(o);h-1==0?(u.connectionsWeight[\\\"delete\\\"](o),u.connectionsCount[\\\"delete\\\"](o)):(u.connectionsWeight.set(o,c-s.weight),u.connectionsCount.set(o,h-1)),t!=r&&(u!=o&&(c=o.connectionsWeight.get(u),(h=o.connectionsCount.get(u))-1==0?(o.connectionsWeight[\\\"delete\\\"](u),o.connectionsCount[\\\"delete\\\"](u)):(o.connectionsWeight.set(u,c-s.weight),o.connectionsCount.set(u,h-1))),r=this.nodeConnectionsWeight[t].get(u),(c=this.nodeConnectionsCount[t].get(u))-1==0?(this.nodeConnectionsWeight[t][\\\"delete\\\"](u),this.nodeConnectionsCount[t][\\\"delete\\\"](u)):(this.nodeConnectionsWeight[t].set(u,r-s.weight),this.nodeConnectionsCount[t].set(u,c-1)))}e.remove(t)},o.prototype.moveNodeTo=function(t,e){var n=this.nodeCommunities[t];this.removeNodeFrom(t,n),this.addNodeTo(t,e)},o.prototype.zoomOut=function(){var i=this.communities.reduce(function(t,e){return t.push(e),t},[]),t=i.length,s=new Array(t),r=0,n=(this.nodeCommunities=new Array(t),this.nodeConnectionsWeight=new Array(t),this.nodeConnectionsCount=new Array(t),new Map);i.forEach((function(t){var o=0,e=(this.nodeConnectionsWeight[r]=new Map,this.nodeConnectionsCount[r]=new Map,s[r]=[],this.nodeCommunities[r]=new h(t),new h(this.structure));t.nodes.forEach(function(t){this.invMap.get(t).nodes.forEach(e.nodes.add.bind(e.nodes))},this),n.set(r,e),t.connectionsWeight.forEach(function(t,e){var n=i.indexOf(e);~n&&(o+=n==r?2*t:t,n=new a(r,n,t),s[r].push(n))},this),this.weights[r]=o,this.nodeCommunities[r].seed(r),r++}).bind(this)),this.communities=[];for(var e=0;e<t;e++){var o,u=this.nodeCommunities[e];for(o in this.communities.push(u),s[e]){var c=s[e][o];this.nodeConnectionsWeight[e].set(this.nodeCommunities[c.target],c.weight),this.nodeConnectionsCount[e].set(this.nodeCommunities[c.target],1),u.connectionsWeight.set(this.nodeCommunities[c.target],c.weight),u.connectionsCount.set(this.nodeCommunities[c.target],1)}}this.N=t,this.topology=s,this.invMap=n},t.exports=o},623:t=>{t.exports=function(t,e,n){this.source=t,this.target=e,this.weight=n}},109:(t,e,n)=>{var i=n(997),c=n(216);function o(t,e){this.isRandomized=!1,this.useWeight=e,this.resolution=t||1,this.structure=null}o.prototype.execute=function(t){this.structure=new i(t,this.useWeight);var n=new Array(t.getNodesCount()),o=(this.computeModularity(t,this.structure,n,this.resolution,this.isRandomized,this.useWeight),{});return this.structure.map.forEach(function(t,e){o[e]=n[t]}),o},o.prototype.computeModularity=function(t,e,n,o,i,s){e.graphWeightSum,e.weights.slice();for(var r,u=Object.create(null),c=!0;c;){for(var c=!1,h=!0;h;){var h=!1,a=0;i&&(r=e.N,a=Math.floor(Math.random()*+r)+0);for(var d=0,f=a;d<e.N;f=(f+1)%e.N){d++;var g=this.updateBestCommunity(e,f,o);e.nodeCommunities[f]!=g&&null!=g&&(e.moveNodeTo(f,g),h=!0)}c=h||c}c&&e.zoomOut()}return this.fillComStructure(t,e,n),u},o.prototype.updateBestCommunity=function(o,i,s){var r=this.q(i,o.nodeCommunities[i],o,s),u=o.nodeCommunities[i];return o.nodeConnectionsWeight[i].forEach(function(t,e){var n=this.q(i,e,o,s);r<n&&(r=n,u=e)},this),u},o.prototype.fillComStructure=function(t,e,n){var o=0;return e.communities.forEach(function(t){t.nodes.forEach(function(t){e.invMap.get(t).nodes.forEach(function(t){n[t]=o})}),o++}),n},o.prototype.fillDegreeCount=function(t,n,o,i,s){var r=new Array(n.communities.length),u=c.degree(t);return t.forEachNode(function(t){var e=n.map.get(t);r[o[e]]+=s?i[e]:u[t.id]}),r},o.prototype._finalQ=function(t,e,n,o,i,s,r){throw new Error(\\\"not implemented properly\\\")},o.prototype.q=function(t,e,n,o){var i=n.nodeConnectionsWeight[t].get(e),s=0,r=e.weightSum,u=n.weights[t],i=o*(s=null!=i?i:s)-u*r/(2*n.graphWeightSum);return n.nodeCommunities[t]==e&&1<n.nodeCommunities[t].size()&&(i=o*s-u*(r-u)/(2*n.graphWeightSum)),i=n.nodeCommunities[t]==e&&1==n.nodeCommunities[t].size()?0:i},t.exports=o},225:(t,e,n)=>{\\\"use strict\\\";n.r(e);var o=n(109),d=n.n(o),o=n(550),i=n(736),f=n.n(i);function s(n){return function(t,e){var a={};t.eachSeriesByType(n,function(e){if(e.get(\\\"modularity\\\")){var i=e.getGraph(),n={},o=f()(),t=(i.data.each(function(t){var e=i.getNodeByIndex(t);return n[e.id]=t,o.addNode(e.id),e.id}),i.edgeData.each(\\\"value\\\",function(t,e){var n=i.getEdgeByIndex(e);return o.addLink(n.node1.id,n.node2.id),{source:n.node1.id,target:n.node2.id,value:t}}),new(d())(e.get(\\\"modularity.resolution\\\")||1).execute(o)),s={};for(r in t)s[h=t[r]]=s[h]||0,s[h]++;var r,u=Object.keys(s),c=(e.get(\\\"modularity.sort\\\")&&u.sort(function(t,e){return e-t}),{});for(r in u.forEach(function(t){c[t]=e.getColorFromPalette(t,a)}),t){var h=t[r];i.data.ensureUniqueItemVisual(n[r],\\\"style\\\").fill=c[h]}i.edgeData.each(function(t){var e=i.edgeData.getItemModel(t),n=i.getEdgeByIndex(t),o=e.get([\\\"lineStyle\\\",\\\"normal\\\",\\\"color\\\"])||e.get([\\\"lineStyle\\\",\\\"color\\\"]);switch(o){case\\\"source\\\":o=n.node1.getVisual(\\\"style\\\").fill;break;case\\\"target\\\":o=n.node2.getVisual(\\\"style\\\").fill}null!=o&&(i.edgeData.ensureUniqueItemVisual(t,\\\"style\\\").stroke=o)})}})}}o.registerVisual(o.PRIORITY.VISUAL.CHART+1,s(\\\"graph\\\")),o.registerVisual(o.PRIORITY.VISUAL.CHART+1,s(\\\"graphGL\\\"))},550:t=>{\\\"use strict\\\";t.exports=e}},i={},o.n=t=>{var e=t&&t.__esModule?()=>t[\\\"default\\\"]:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},o(10);function o(t){var e=i[t];return void 0!==e||(e=i[t]={exports:{}},n[t](e,e.exports,o)),e.exports}var n,i});\",\"type\":\"application/javascript\",\"module-type\":\"echarts-extension\",\"Modern.TiddlyDev#Minify\":\"false\"},\"$:/plugins/Gk0Wk/echarts-graph-modularity/readme\":{\"title\":\"$:/plugins/Gk0Wk/echarts-graph-modularity/readme\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n[[Graph modularity extension|https://github.com/ecomfe/echarts-graph-modularity]] 将进行社区检测，并将图的顶点划分为几个子集。每个子集都将被分配一个不同的颜色。\\n\\n* 文档: https://github.com/ecomfe/echarts-graph-modularity\\n\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\n[[Graph modularity extension|https://github.com/ecomfe/echarts-graph-modularity]] will do community detection and partition a graph's vertices in several subsets. Each subset will be assigned a different color.\\n\\n* Doc: https://github.com/ecomfe/echarts-graph-modularity\\n\\n</$list>\\n</$list>\\n\\n[img[https://github.com/ecomfe/echarts-graph-modularity/raw/master/example/modularity.png]]\\n\"}}}","Modern.TiddlyDev#SHA256-Hashed":"3100ac3bdb8dadf489bea150ee3e59f5b8b4a4c3b2f60142c19f4cc596b27e21","author":"Gk0Wk","core-version":">=5.2.0"}